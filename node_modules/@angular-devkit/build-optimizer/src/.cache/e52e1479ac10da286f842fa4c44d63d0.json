{"remainingRequest":"/home/ubuntu/4chatting/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/ubuntu/4chatting/node_modules/videogular2/src/controls/vg-play-pause/vg-play-pause.js","dependencies":[{"path":"/home/ubuntu/4chatting/node_modules/videogular2/src/controls/vg-play-pause/vg-play-pause.js","mtime":1547199365000},{"path":"/home/ubuntu/4chatting/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/4chatting/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar vg_api_1 = require(\"../../core/services/vg-api\");\nvar vg_states_1 = require(\"../../core/states/vg-states\");\nvar VgPlayPause = /** @class */ /*@__PURE__*/ (function () {\n    function VgPlayPause(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.ariaValue = vg_states_1.VgStates.VG_PAUSED;\n        this.elem = ref.nativeElement;\n    }\n    VgPlayPause.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(function () { return _this.onPlayerReady(); }));\n        }\n    };\n    VgPlayPause.prototype.onPlayerReady = function () {\n        this.target = this.API.getMediaById(this.vgFor);\n    };\n    VgPlayPause.prototype.onClick = function () {\n        this.playPause();\n    };\n    VgPlayPause.prototype.onKeyDown = function (event) {\n        // On press Enter (13) or Space (32)\n        if (event.keyCode === 13 || event.keyCode === 32) {\n            event.preventDefault();\n            this.playPause();\n        }\n    };\n    VgPlayPause.prototype.playPause = function () {\n        var state = this.getState();\n        switch (state) {\n            case vg_states_1.VgStates.VG_PLAYING:\n                this.target.pause();\n                break;\n            case vg_states_1.VgStates.VG_PAUSED:\n            case vg_states_1.VgStates.VG_ENDED:\n                this.target.play();\n                break;\n        }\n    };\n    VgPlayPause.prototype.getState = function () {\n        this.ariaValue = this.target ? this.target.state : vg_states_1.VgStates.VG_PAUSED;\n        return this.ariaValue;\n    };\n    VgPlayPause.prototype.ngOnDestroy = function () {\n        this.subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    VgPlayPause.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'vg-play-pause',\n                    encapsulation: core_1.ViewEncapsulation.None,\n                    template: \"\\n        <div class=\\\"icon\\\"\\n             [class.vg-icon-pause]=\\\"getState() === 'playing'\\\"\\n             [class.vg-icon-play_arrow]=\\\"getState() === 'paused' || getState() === 'ended'\\\"\\n             tabindex=\\\"0\\\"\\n             role=\\\"button\\\"\\n             [attr.aria-label]=\\\"getState() === 'paused'?'play':'pause'\\\"\\n             [attr.aria-valuetext]=\\\"ariaValue\\\">\\n        </div>\",\n                    styles: [\"\\n        vg-play-pause {\\n            -webkit-touch-callout: none;\\n            -webkit-user-select: none;\\n            -khtml-user-select: none;\\n            -moz-user-select: none;\\n            -ms-user-select: none;\\n            user-select: none;\\n            display: flex;\\n            justify-content: center;\\n            height: 50px;\\n            width: 50px;\\n            cursor: pointer;\\n            color: white;\\n            line-height: 50px;\\n        }\\n\\n        vg-play-pause .icon {\\n            pointer-events: none;\\n        }\\n    \"]\n                },] },\n    ];\n    VgPlayPause.propDecorators = {\n        vgFor: [{ type: core_1.Input }],\n        onClick: [{ type: core_1.HostListener, args: ['click',] }],\n        onKeyDown: [{ type: core_1.HostListener, args: ['keydown', ['$event'],] }]\n    };\n    return VgPlayPause;\n}());\nexports.VgPlayPause = VgPlayPause;\n",null]}