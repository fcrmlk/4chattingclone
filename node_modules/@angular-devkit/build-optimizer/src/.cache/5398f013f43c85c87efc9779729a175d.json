{"remainingRequest":"/home/ubuntu/4chatting/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/ubuntu/4chatting/node_modules/videogular2/src/core/vg-cue-points/vg-cue-points.js","dependencies":[{"path":"/home/ubuntu/4chatting/node_modules/videogular2/src/core/vg-cue-points/vg-cue-points.js","mtime":1547199365000},{"path":"/home/ubuntu/4chatting/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/4chatting/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar vg_events_1 = require(\"../events/vg-events\");\nvar rxjs_1 = require(\"rxjs\");\nvar VgCuePoints = /** @class */ /*@__PURE__*/ (function () {\n    function VgCuePoints(ref) {\n        this.ref = ref;\n        this.onEnterCuePoint = new core_1.EventEmitter();\n        this.onUpdateCuePoint = new core_1.EventEmitter();\n        this.onExitCuePoint = new core_1.EventEmitter();\n        this.onCompleteCuePoint = new core_1.EventEmitter();\n        this.subscriptions = [];\n        this.cuesSubscriptions = [];\n        this.totalCues = 0;\n    }\n    VgCuePoints.prototype.ngOnInit = function () {\n        this.onLoad$ = rxjs_1.fromEvent(this.ref.nativeElement, vg_events_1.VgEvents.VG_LOAD);\n        this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\n    };\n    VgCuePoints.prototype.onLoad = function (event) {\n        var cues = event.target.track.cues;\n        this.ref.nativeElement.cues = cues;\n        this.updateCuePoints(cues);\n    };\n    VgCuePoints.prototype.updateCuePoints = function (cues) {\n        this.cuesSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n        for (var i = 0, l = cues.length; i < l; i++) {\n            this.onEnter$ = rxjs_1.fromEvent(cues[i], vg_events_1.VgEvents.VG_ENTER);\n            this.cuesSubscriptions.push(this.onEnter$.subscribe(this.onEnter.bind(this)));\n            this.onExit$ = rxjs_1.fromEvent(cues[i], vg_events_1.VgEvents.VG_EXIT);\n            this.cuesSubscriptions.push(this.onExit$.subscribe(this.onExit.bind(this)));\n        }\n    };\n    VgCuePoints.prototype.onEnter = function (event) {\n        this.onEnterCuePoint.emit(event.target);\n    };\n    VgCuePoints.prototype.onExit = function (event) {\n        this.onExitCuePoint.emit(event.target);\n    };\n    VgCuePoints.prototype.ngDoCheck = function () {\n        if (this.ref.nativeElement.cues) {\n            var changes = this.totalCues !== this.ref.nativeElement.track.cues.length;\n            if (changes) {\n                this.totalCues = this.ref.nativeElement.track.cues.length;\n                this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\n                this.updateCuePoints(this.ref.nativeElement.track.cues);\n            }\n        }\n    };\n    VgCuePoints.prototype.ngOnDestroy = function () {\n        this.subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    VgCuePoints.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[vgCuePoints]'\n                },] },\n    ];\n    VgCuePoints.propDecorators = {\n        onEnterCuePoint: [{ type: core_1.Output, args: ['onEnterCuePoint',] }],\n        onUpdateCuePoint: [{ type: core_1.Output, args: ['onUpdateCuePoint',] }],\n        onExitCuePoint: [{ type: core_1.Output, args: ['onExitCuePoint',] }],\n        onCompleteCuePoint: [{ type: core_1.Output, args: ['onCompleteCuePoint',] }]\n    };\n    return VgCuePoints;\n}());\nexports.VgCuePoints = VgCuePoints;\n",null]}