{"remainingRequest":"/home/ubuntu/4chatting/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/ubuntu/4chatting/node_modules/videogular2/src/controls/vg-fullscreen/vg-fullscreen.js","dependencies":[{"path":"/home/ubuntu/4chatting/node_modules/videogular2/src/controls/vg-fullscreen/vg-fullscreen.js","mtime":1547199365000},{"path":"/home/ubuntu/4chatting/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/4chatting/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar vg_api_1 = require(\"../../core/services/vg-api\");\nvar vg_fullscreen_api_1 = require(\"../../core/services/vg-fullscreen-api\");\nvar VgFullscreen = /** @class */ /*@__PURE__*/ (function () {\n    function VgFullscreen(ref, API, fsAPI) {\n        this.API = API;\n        this.fsAPI = fsAPI;\n        this.isFullscreen = false;\n        this.subscriptions = [];\n        this.ariaValue = 'normal mode';\n        this.elem = ref.nativeElement;\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    }\n    VgFullscreen.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(function () { return _this.onPlayerReady(); }));\n        }\n    };\n    VgFullscreen.prototype.onPlayerReady = function () {\n        this.target = this.API.getMediaById(this.vgFor);\n    };\n    VgFullscreen.prototype.onChangeFullscreen = function (fsState) {\n        this.ariaValue = fsState ? 'fullscren mode' : 'normal mode';\n        this.isFullscreen = fsState;\n    };\n    VgFullscreen.prototype.onClick = function () {\n        this.changeFullscreenState();\n    };\n    VgFullscreen.prototype.onKeyDown = function (event) {\n        // On press Enter (13) or Space (32)\n        if (event.keyCode === 13 || event.keyCode === 32) {\n            event.preventDefault();\n            this.changeFullscreenState();\n        }\n    };\n    VgFullscreen.prototype.changeFullscreenState = function () {\n        var element = this.target;\n        if (this.target instanceof vg_api_1.VgAPI) {\n            element = null;\n        }\n        this.fsAPI.toggleFullscreen(element);\n    };\n    VgFullscreen.prototype.ngOnDestroy = function () {\n        this.subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    VgFullscreen.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'vg-fullscreen',\n                    encapsulation: core_1.ViewEncapsulation.None,\n                    template: \"\\n        <div class=\\\"icon\\\"\\n             [class.vg-icon-fullscreen]=\\\"!isFullscreen\\\"\\n             [class.vg-icon-fullscreen_exit]=\\\"isFullscreen\\\"\\n             tabindex=\\\"0\\\"\\n             role=\\\"button\\\"\\n             aria-label=\\\"fullscreen button\\\"\\n             [attr.aria-valuetext]=\\\"ariaValue\\\">\\n        </div>\",\n                    styles: [\"\\n        vg-fullscreen {\\n            -webkit-touch-callout: none;\\n            -webkit-user-select: none;\\n            -khtml-user-select: none;\\n            -moz-user-select: none;\\n            -ms-user-select: none;\\n            user-select: none;\\n            display: flex;\\n            justify-content: center;\\n            height: 50px;\\n            width: 50px;\\n            cursor: pointer;\\n            color: white;\\n            line-height: 50px;\\n        }\\n\\n        vg-fullscreen .icon {\\n            pointer-events: none;\\n        }\\n    \"]\n                },] },\n    ];\n    VgFullscreen.propDecorators = {\n        onClick: [{ type: core_1.HostListener, args: ['click',] }],\n        onKeyDown: [{ type: core_1.HostListener, args: ['keydown', ['$event'],] }]\n    };\n    return VgFullscreen;\n}());\nexports.VgFullscreen = VgFullscreen;\n",null]}