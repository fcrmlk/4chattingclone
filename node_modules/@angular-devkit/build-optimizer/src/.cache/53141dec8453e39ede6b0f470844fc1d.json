{"remainingRequest":"/home/ubuntu/4chatting/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/ubuntu/4chatting/node_modules/videogular2/src/controls/vg-controls.js","dependencies":[{"path":"/home/ubuntu/4chatting/node_modules/videogular2/src/controls/vg-controls.js","mtime":1547199365000},{"path":"/home/ubuntu/4chatting/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/4chatting/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar vg_api_1 = require(\"../core/services/vg-api\");\nvar vg_controls_hidden_1 = require(\"./../core/services/vg-controls-hidden\");\nvar vg_states_1 = require(\"../core/states/vg-states\");\nvar rxjs_1 = require(\"rxjs\");\nvar VgControls = /** @class */ /*@__PURE__*/ (function () {\n    function VgControls(API, ref, hidden) {\n        this.API = API;\n        this.ref = ref;\n        this.hidden = hidden;\n        this.isAdsPlaying = 'initial';\n        this.hideControls = false;\n        this.vgAutohide = false;\n        this.vgAutohideTime = 3;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    VgControls.prototype.ngOnInit = function () {\n        var _this = this;\n        this.mouseMove$ = rxjs_1.fromEvent(this.API.videogularElement, 'mousemove');\n        this.subscriptions.push(this.mouseMove$.subscribe(this.show.bind(this)));\n        this.touchStart$ = rxjs_1.fromEvent(this.API.videogularElement, 'touchstart');\n        this.subscriptions.push(this.touchStart$.subscribe(this.show.bind(this)));\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(function () { return _this.onPlayerReady(); }));\n        }\n    };\n    VgControls.prototype.onPlayerReady = function () {\n        this.target = this.API.getMediaById(this.vgFor);\n        this.subscriptions.push(this.target.subscriptions.play.subscribe(this.onPlay.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.pause.subscribe(this.onPause.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.startAds.subscribe(this.onStartAds.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.endAds.subscribe(this.onEndAds.bind(this)));\n    };\n    VgControls.prototype.ngAfterViewInit = function () {\n        if (this.vgAutohide) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    };\n    VgControls.prototype.onPlay = function () {\n        if (this.vgAutohide) {\n            this.hide();\n        }\n    };\n    VgControls.prototype.onPause = function () {\n        clearTimeout(this.timer);\n        this.hideControls = false;\n        this.hidden.state(false);\n    };\n    VgControls.prototype.onStartAds = function () {\n        this.isAdsPlaying = 'none';\n    };\n    VgControls.prototype.onEndAds = function () {\n        this.isAdsPlaying = 'initial';\n    };\n    VgControls.prototype.hide = function () {\n        if (this.vgAutohide) {\n            clearTimeout(this.timer);\n            this.hideAsync();\n        }\n    };\n    VgControls.prototype.show = function () {\n        clearTimeout(this.timer);\n        this.hideControls = false;\n        this.hidden.state(false);\n        if (this.vgAutohide) {\n            this.hideAsync();\n        }\n    };\n    VgControls.prototype.hideAsync = function () {\n        var _this = this;\n        if (this.API.state === vg_states_1.VgStates.VG_PLAYING) {\n            this.timer = setTimeout(function () {\n                _this.hideControls = true;\n                _this.hidden.state(true);\n            }, this.vgAutohideTime * 1000);\n        }\n    };\n    VgControls.prototype.ngOnDestroy = function () {\n        this.subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    VgControls.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'vg-controls',\n                    encapsulation: core_1.ViewEncapsulation.None,\n                    template: \"<ng-content></ng-content>\",\n                    styles: [\"\\n        vg-controls {\\n            position: absolute;\\n            display: flex;\\n            width: 100%;\\n            height: 50px;\\n            z-index: 300;\\n            bottom: 0;\\n            background-color: rgba(0, 0, 0, 0.5);\\n            -webkit-transition: bottom 1s;\\n            -khtml-transition: bottom 1s;\\n            -moz-transition: bottom 1s;\\n            -ms-transition: bottom 1s;\\n            transition: bottom 1s;\\n        }\\n\\n        vg-controls.hide {  \\n            bottom: -50px;\\n        }\\n    \"]\n                },] },\n    ];\n    VgControls.propDecorators = {\n        isAdsPlaying: [{ type: core_1.HostBinding, args: ['style.pointer-events',] }],\n        hideControls: [{ type: core_1.HostBinding, args: ['class.hide',] }],\n        vgFor: [{ type: core_1.Input }],\n        vgAutohide: [{ type: core_1.Input }],\n        vgAutohideTime: [{ type: core_1.Input }]\n    };\n    return VgControls;\n}());\nexports.VgControls = VgControls;\n",null]}