{"remainingRequest":"/home/ubuntu/4chatting/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/ubuntu/4chatting/node_modules/videogular2/src/buffering/vg-buffering.js","dependencies":[{"path":"/home/ubuntu/4chatting/node_modules/videogular2/src/buffering/vg-buffering.js","mtime":1547199365000},{"path":"/home/ubuntu/4chatting/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/4chatting/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar vg_api_1 = require(\"../core/services/vg-api\");\nvar VgBuffering = /** @class */ /*@__PURE__*/ (function () {\n    function VgBuffering(ref, API) {\n        this.API = API;\n        this.checkInterval = 50;\n        this.currentPlayPos = 0;\n        this.lastPlayPos = 0;\n        this.subscriptions = [];\n        this.isBuffering = false;\n        this.elem = ref.nativeElement;\n    }\n    VgBuffering.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(function () { return _this.onPlayerReady(); }));\n        }\n    };\n    VgBuffering.prototype.onPlayerReady = function () {\n        var _this = this;\n        this.target = this.API.getMediaById(this.vgFor);\n        this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe(function (isBuffering) { return _this.onUpdateBuffer(isBuffering); }));\n    };\n    VgBuffering.prototype.onUpdateBuffer = function (isBuffering) {\n        this.isBuffering = isBuffering;\n    };\n    VgBuffering.prototype.ngOnDestroy = function () {\n        this.subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    VgBuffering.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'vg-buffering',\n                    encapsulation: core_1.ViewEncapsulation.None,\n                    template: \"<div class=\\\"vg-buffering\\\">\\n            <div class=\\\"bufferingContainer\\\">\\n                <div class=\\\"loadingSpinner\\\"></div>\\n            </div>\\n        </div>\",\n                    styles: [\"\\n        vg-buffering {\\n            display: none;\\n            z-index: 201;\\n        }\\n\\n        vg-buffering.is-buffering {\\n            display: block;\\n        }\\n        \\n        .vg-buffering {\\n            position: absolute;\\n            display: block;\\n            width: 100%;\\n            height: 100%;\\n        }\\n\\n        .vg-buffering .bufferingContainer {\\n            width: 100%;\\n            position: absolute;\\n            cursor: pointer;\\n            top: 50%;\\n            margin-top: -50px;\\n\\n            zoom: 1;\\n            filter: alpha(opacity=60);\\n            opacity: 0.6;\\n        }\\n\\n        /* Loading Spinner\\n        * http://www.alessioatzeni.com/blog/css3-loading-animation-loop/\\n        */\\n        .vg-buffering .loadingSpinner {\\n            background-color: rgba(0, 0, 0, 0);\\n            border: 5px solid rgba(255, 255, 255, 1);\\n            opacity: .9;\\n            border-top: 5px solid rgba(0, 0, 0, 0);\\n            border-left: 5px solid rgba(0, 0, 0, 0);\\n            border-radius: 50px;\\n            box-shadow: 0 0 35px #FFFFFF;\\n            width: 50px;\\n            height: 50px;\\n            margin: 0 auto;\\n            -moz-animation: spin .5s infinite linear;\\n            -webkit-animation: spin .5s infinite linear;\\n        }\\n\\n        .vg-buffering .loadingSpinner .stop {\\n            -webkit-animation-play-state: paused;\\n            -moz-animation-play-state: paused;\\n        }\\n\\n        @-moz-keyframes spin {\\n            0% {\\n                -moz-transform: rotate(0deg);\\n            }\\n            100% {\\n                -moz-transform: rotate(360deg);\\n            }\\n        }\\n\\n        @-moz-keyframes spinoff {\\n            0% {\\n                -moz-transform: rotate(0deg);\\n            }\\n            100% {\\n                -moz-transform: rotate(-360deg);\\n            }\\n        }\\n\\n        @-webkit-keyframes spin {\\n            0% {\\n                -webkit-transform: rotate(0deg);\\n            }\\n            100% {\\n                -webkit-transform: rotate(360deg);\\n            }\\n        }\\n\\n        @-webkit-keyframes spinoff {\\n            0% {\\n                -webkit-transform: rotate(0deg);\\n            }\\n            100% {\\n                -webkit-transform: rotate(-360deg);\\n            }\\n        }\\n    \"]\n                },] },\n    ];\n    VgBuffering.propDecorators = {\n        vgFor: [{ type: core_1.Input }],\n        isBuffering: [{ type: core_1.HostBinding, args: ['class.is-buffering',] }]\n    };\n    return VgBuffering;\n}());\nexports.VgBuffering = VgBuffering;\n",null]}