{"remainingRequest":"/home/ubuntu/4chatting/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/ubuntu/4chatting/node_modules/videogular2/src/controls/vg-track-selector/vg-track-selector.js","dependencies":[{"path":"/home/ubuntu/4chatting/node_modules/videogular2/src/controls/vg-track-selector/vg-track-selector.js","mtime":1547199365000},{"path":"/home/ubuntu/4chatting/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/4chatting/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar vg_api_1 = require(\"../../core/services/vg-api\");\nvar VgTrackSelector = /** @class */ /*@__PURE__*/ (function () {\n    function VgTrackSelector(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    VgTrackSelector.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(function () { return _this.onPlayerReady(); }));\n        }\n    };\n    VgTrackSelector.prototype.onPlayerReady = function () {\n        this.target = this.API.getMediaById(this.vgFor);\n        var subs = Array.from(this.API.getMasterMedia().elem.children)\n            .filter(function (item) { return item.tagName === 'TRACK'; })\n            .filter(function (item) { return item.kind === 'subtitles'; })\n            .map(function (item) {\n            return ({\n                label: item.label,\n                selected: item.default === true,\n                id: item.srclang\n            });\n        });\n        this.tracks = subs.concat([\n            {\n                id: null,\n                label: 'Off',\n                selected: subs.every(function (item) { return item.selected === false; })\n            }\n        ]);\n        var track = this.tracks.filter(function (item) { return item.selected === true; })[0];\n        this.trackSelected = track.id;\n        this.ariaValue = track.label;\n    };\n    VgTrackSelector.prototype.selectTrack = function (trackId) {\n        var _this = this;\n        this.trackSelected = (trackId === 'null') ? null : trackId;\n        this.ariaValue = 'No track selected';\n        Array.from(this.API.getMasterMedia().elem.textTracks)\n            .forEach(function (item) {\n            if (item.language === trackId) {\n                _this.ariaValue = item.label;\n                item.mode = 'showing';\n            }\n            else {\n                item.mode = 'hidden';\n            }\n        });\n    };\n    VgTrackSelector.prototype.ngOnDestroy = function () {\n        this.subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    VgTrackSelector.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'vg-track-selector',\n                    encapsulation: core_1.ViewEncapsulation.None,\n                    template: \"\\n        <div class=\\\"container\\\">\\n            <div class=\\\"track-selected\\\"\\n                 [class.vg-icon-closed_caption]=\\\"!trackSelected\\\">\\n                {{ trackSelected || '' }}\\n            </div>\\n            \\n            <select class=\\\"trackSelector\\\" \\n                    (change)=\\\"selectTrack($event.target.value)\\\"\\n                    tabindex=\\\"0\\\"\\n                    aria-label=\\\"track selector\\\"\\n                    [attr.aria-valuetext]=\\\"ariaValue\\\">\\n                <option \\n                    *ngFor=\\\"let track of tracks\\\"\\n                    [value]=\\\"track.id\\\"\\n                    [selected]=\\\"track.selected === true\\\">\\n                    {{ track.label }}\\n                </option>\\n            </select>\\n        </div>\\n    \",\n                    styles: [\"\\n        vg-track-selector {\\n            -webkit-touch-callout: none;\\n            -webkit-user-select: none;\\n            -moz-user-select: none;\\n            -ms-user-select: none;\\n            user-select: none;\\n            display: flex;\\n            justify-content: center;\\n            width: 50px;\\n            height: 50px;\\n            cursor: pointer;\\n            color: white;\\n            line-height: 50px;\\n        }\\n        vg-track-selector .container {\\n            position: relative;\\n            display: flex;\\n            flex-grow: 1;\\n            align-items: center;\\n            \\n            padding: 0;\\n            margin: 5px;\\n        }\\n        vg-track-selector select.trackSelector {\\n            width: 50px;\\n            padding: 5px 8px;\\n            border: none;\\n            background: none;\\n            -webkit-appearance: none;\\n            -moz-appearance: none;\\n            appearance: none;\\n            color: transparent;\\n            font-size: 16px;\\n        }\\n        vg-track-selector select.trackSelector::-ms-expand {\\n            display: none;\\n        }\\n        vg-track-selector select.trackSelector option {\\n            color: #000;\\n        }\\n        vg-track-selector .track-selected {\\n            position: absolute;\\n            width: 100%;\\n            height: 50px;\\n            top: -6px;\\n            text-align: center;\\n            text-transform: uppercase;\\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\\n            padding-top: 2px;\\n            pointer-events: none;\\n        }\\n        vg-track-selector .vg-icon-closed_caption:before {\\n            width: 100%;\\n        }\\n    \"]\n                },] },\n    ];\n    VgTrackSelector.propDecorators = {\n        vgFor: [{ type: core_1.Input }]\n    };\n    return VgTrackSelector;\n}());\nexports.VgTrackSelector = VgTrackSelector;\n",null]}