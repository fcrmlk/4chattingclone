(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common'], factory) :
	(factory((global['ngx-prevent-double-submission'] = {}),global.core,global.common));
}(this, (function (exports,core,common) { 'use strict';

var PreventDoubleSubmitDirective = (function () {
    /**
     * @param {?} el
     */
    function PreventDoubleSubmitDirective(el) {
        this.el = el;
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    PreventDoubleSubmitDirective.prototype.onClick = function ($event) {
        if (!$event['detail'] || $event['detail'] == 1)
            return true;
        else {
            $event.stopPropagation();
            return false;
        }
    };
    return PreventDoubleSubmitDirective;
}());
PreventDoubleSubmitDirective.decorators = [
    { type: core.Directive, args: [{
                selector: '[prevent-double-submit]',
                exportAs: 'preventDoubleSubmit'
            },] },
];
/**
 * @nocollapse
 */
PreventDoubleSubmitDirective.ctorParameters = function () { return [
    { type: core.ElementRef, },
]; };
PreventDoubleSubmitDirective.propDecorators = {
    'onClick': [{ type: core.HostListener, args: ['click', ['$event'],] },],
};

var PreventDoubleSubmitModule = (function () {
    function PreventDoubleSubmitModule() {
    }
    /**
     * @return {?}
     */
    PreventDoubleSubmitModule.forRoot = function () {
        return {
            ngModule: PreventDoubleSubmitModule,
            providers: []
        };
    };
    return PreventDoubleSubmitModule;
}());
PreventDoubleSubmitModule.decorators = [
    { type: core.NgModule, args: [{
                imports: [
                    common.CommonModule
                ],
                declarations: [
                    PreventDoubleSubmitDirective
                ],
                exports: [
                    PreventDoubleSubmitDirective
                ]
            },] },
];
/**
 * @nocollapse
 */
PreventDoubleSubmitModule.ctorParameters = function () { return []; };

exports.PreventDoubleSubmitModule = PreventDoubleSubmitModule;
exports.PreventDoubleSubmitDirective = PreventDoubleSubmitDirective;

Object.defineProperty(exports, '__esModule', { value: true });

})));
