"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var core_1 = require('@angular/core');
var flatten = require('flat').flatten;
var vsprintf = require('sprintf-js').vsprintf;
var TranslateService = (function () {
    function TranslateService(_translations) {
        this._translations = _translations;
        this._translations = flatten(_translations);
    }
    TranslateService.prototype.setTranslations = function (value) {
        this._translations = flatten(value);
    };
    TranslateService.prototype.hasTranslation = function (value) {
        return !!this._translations[value];
    };
    TranslateService.prototype.translate = function (value, parameters) {
        if (parameters === void 0) { parameters = []; }
        var translated = (this._translations[value]) ? this._translations[value] : value;
        try {
            return vsprintf(translated, parameters);
        }
        catch (e) {
            return translated.replace(/%s|%d/gi, '');
        }
    };
    TranslateService = __decorate([
        core_1.Injectable(),
        __param(0, core_1.Inject('translations')), 
        __metadata('design:paramtypes', [Object])
    ], TranslateService);
    return TranslateService;
}());
exports.TranslateService = TranslateService;
//# sourceMappingURL=service.js.map